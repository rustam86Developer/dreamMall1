{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample documentation for ISV to integrate using the API services.For this sample, you can use your api-key to test the available APIs.",
     "title": "Stikkum"
   
  },
  "host": "https://app.stikkumdemo.tk/api",
  "basePath": "/",
  "tags": [
    {
      "name": "Enrollment",
      "description": "Enroll And Database upload"

    },
    {
      "name": "Callbacks",
      "description": "Register Callback Endpoints"
    },
    {
      "name": "Push Services",
      "description": "Test Stikkum Push Services"
    },
    {
      "name": "Self Pull",
      "description": "Mark Self Pull"
    },
    {
      "name": "Delete Client",
      "description": "Delete a Client"
    }
 
  ],
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/isv/v1.0/EnrollIsvClient": {
      "post": {
        "tags": [
          "Enrollment"
        ],
        "summary": "Enroll With Stikkum",
        "description": "By Enrolling You can upload you client data and able to see their Status.",
        "operationId": "EnrollIsvClient",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "apikey",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "object that needs to be added to the Database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Enrollment"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },  

    "/isv/v1.0/checkIsvEnrollStatus": {
      "post": {
        "tags": [
          "Enrollment"
        ],
        "summary": "Check client’s enrollment status",
        "description": "",
        "operationId": "checkIsvEnrollStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clienttoken",
            "in": "header",
            "description": "",
            "required": true,
            "type": "string"
        
          }
          
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/isv/v1.0/changeEnrollStatus": {
      "post": {
        "tags": [
          "Enrollment"
        ],
        "summary": "Change Enrollment Status",
        "description": "",
        "operationId": "changeEnrollStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clienttoken",
            "in": "header",
            "description": "",
            "required": true,
            "type": "string"
        
          },
          {
            "name": "status",
            "in": "header",
            "description": "A for Aprroved and R for Rejected",
            "required": true,
            "type": "string"
        
          }
          
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/isv/v1.0/uploadClientDatabase": {
      "post": {
        "tags": [
          "Enrollment"
        ],
        "summary": "Uploads Client's Database",
        "description": "Please upload database with more than 100 clients",
        "operationId": "uploadClientDatabase",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clienttoken",
            "in": "header",
            "description": "",
            "required": true,
            "type": "string"
           
          },
         {
            "name": "db_xlsx",
            "in": "formData",
            "description": "file to upload",
            "required": true,
            "type": "file"
          }

        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/isv/v1.0/registerCallbackEndpoint": {
      "post": {
        "tags": [
          "Callbacks"
        ],
        "summary": "Register Endpoints",
        "description": "",
        "operationId": "registerCallbackEndpoint",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "apikey",
            "in": "header",
            "description": "",
            "required": true,
            "type": "string"
        
          },
          {
            "in": "body",
            "name": "body",
            "description": "object that needs to be added to the Database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Callbacks"
            }
          
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/isv/v1.0/testAlertPushNotification": {
      "post": {
        "tags": [
          "Push Services"
        ],
        "summary": "Push Alerts",
        "description": "",
        "operationId": "testAlertPushNotification",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "apikey",
            "in": "header",
            "description": "",
            "required": true,
            "type": "string"
        
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/isv/v1.0/testEnrollStatusPushNotification": {
      "post": {
        "tags": [
          "Push Services"
        ],
        "summary": "Push Enroll Status",
        "description": "",
        "operationId": "testEnrollStatusPushNotification",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clienttoken",
            "in": "header",
            "description": "",
            "required": true,
            "type": "string"
        
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/isv/v1.0/markSelfPulled": {
      "post": {
        "tags": [
          "Self Pull"
        ],
        "summary": "Mark Self Pull",
        "description": "",
        "operationId": "markSelfPulled",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clienttoken",
            "in": "header",
            "description": "",
            "required": true,
            "type": "string"
        
          },
          {
            "in": "body",
            "name": "body",
            "description": "object that needed to mark self pull",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SelfPull"
            }
          
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/isv/v1.0/deleteClient": {
      "post": {
        "tags": [
          "Delete Client"
        ],
        "summary": "Delete Client",
        "description": "",
        "operationId": "deleteClient",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clienttoken",
            "in": "header",
            "description": "",
            "required": true,
            "type": "string"
        
          },
          {
            "in": "body",
            "name": "body",
            "description": "object that needed to delete client",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteClient"
            }
          
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    }

   },

  "definitions": {
    "Enrollment": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "personal_first_name": {
          "type": "string",
          "example": "William"
        },
        "personal_last_name": {
          "type": "string",
          "example": "Clark"
        },
        "personal_title": {
          "type": "string",
          "example": "President"
        },
        "personal_phone": {
          "type": "string",
          "example": "(777) 777-7777"
        },
        "personal_cell_phone": {
          "type": "string",
          "example": "(777) 777-7777"
        },
        "personal_email": {
          "type": "string",
          "example": "William@example.com"
        },
        "personal_nmls": {
          "type": "string",
          "example": "24541"
        },
        "personal_address_1": {
          "type": "string",
          "example": "S7499"

        },
        "personal_address_2": {
          "type": "string",
          "example": "W Ryder St"
        },
        "personal_state": {
          "type": "string",
          "example": "Alabama"
        },
        "personal_city": {
          "type": "string",
          "example": "Abbeville"
        },
        "personal_zip_code": {
          "type": "string",
          "example": "53911"
        },
        "main_poc_name": {
          "type": "string",
          "example": "Maya"
        },
        "main_poc_last_name": {
          "type": "string",
          "example": "Dunn"
        },
        "main_poc_title": {
          "type": "string",
          "example": "President"
        },
        "main_poc_phone": {
          "type": "string",
          "example": "(888) 888-8888"
        },
        "main_poc_cell_phone": {
          "type": "string",
          "example": "(888) 888-8888"
        },
        "main_poc_email": {
          "type": "string",
          "example": "MayaDunn@example.com"
        },
        "main_poc_nmls": {
          "type": "string",
          "example": "22222"
        },
        "main_poc_address_1": {
          "type": "string",
          "example": "W6105 County"
        },
        "main_poc_address_2": {
          "type": "string",
          "example": "Rd CM"
        },
        "main_poc_state": {
          "type": "string",
          "example": "Alabama"
        },
        "main_poc_city": {
          "type": "string",
          "example": "Abbeville"
        },
        "main_poc_zip_code": {
          "type": "string",
          "example": "53954"
        },
        "company_legal_name": {
          "type": "string",
          "example": "RG Mortgage Corporation"
        },
        "company_dba_name": {
          "type": "string",
          "example": "RG Mortgage"
        },
        "company_federal_tax_id": {
          "type": "string",
          "example": "111356462"
        },
        "company_business_classification": {
          "type": "string",
          "example": "Corporation"
        },
        "company_location_type": {
          "type": "string",
          "example": "Commercial Office"
        },
        "company_phone": {
          "type": "string",
          "example": "(999) 999-9999"
        },
        "company_website": {
          "type": "string",
          "example": "https://www.rgmortgage.com/"
        },
        "company_email": {
          "type": "string",
          "example": "rgmortagage@example.com"
        },
        "company_fax": {
          "type": "string",
          "example": "(784) 785-7785"
        },
        "company_nmls": {
          "type": "string",
          "example": "22222"
        },
        "company_type": {
          "type": "string",
          "example": "Mortgage Banker"
        },
        "company_type_name": {
          "type": "string",
          "example": "Banker"
        },
        "company_years_old": {
          "type": "string",
          "example": "5-10"
        },
        "loan_officers": {
          "type": "string",
          "example": "5"
        },
        "loans_under_management": {
          "type": "string",
          "example": "500"
        },
        "company_address_1": {
          "type": "integer",
          "example": "Nullam Avenue"
        },
        "company_address_2": {
          "type": "string",
          "example": "Street no 1"
        },
        "company_zip_code": {
          "type": "string",
          "example": "53943"
        },

        "company_state": {
          "type": "string",
          "example": "Alabama"
        },
        "company_city": {
          "type": "string",
          "example": "Abbeville"
        }
      }
    },
  
  "Callbacks": {
    "type": "object",
    "required": [
      "name"
    ],
    "properties": {
      "enroll_status_url": {
        "type": "string",
        "example": "https://www.example.com/receiveenrollstatus"
      },
      "notification_url": {
        "type": "string",
        "example": "https://www.example.com/receivenotificationalert"
      },
      "api_key": {
        "type": "string",
        "example": "AD5XXX-XXXXX-XXXXX-XXXXX"
      }
    }
},
"SelfPull": {
  "type": "object",
  "required": [
    "name"
  ],
  "properties": {
     
    "first_name": {
      "type": "string",
      "example": "Daniel"
    },
    "last_name": {
      "type": "string",
      "example": "O’Brien”"
    },
    "ssn": {
      "type": "string",
      "example": "849-71-7343"
    },
    "address": {
      "type": "string",
      "example": "6 Mariners Cove Point, NJ"
    },
    "email": {
      "type": "string",
      "example": "danobrien.cs@gmail.com"
    },  
    "phone_number": {
      "type": "string",
      "example": "(322) 222-2222"
    }
  }
},
"DeleteClient": {
  "type": "object",
  "required": [
    "name"
  ],
  "properties": {
     
    "first_name": {
      "type": "string",
      "example": "Daniel"
    },
    "last_name": {
      "type": "string",
      "example": "O’Brien”"
    },
    "ssn": {
      "type": "string",
      "example": "849-71-7343"
    },
    "address": {
      "type": "string",
      "example": "6 Mariners Cove Point, NJ"
    },
    "email": {
      "type": "string",
      "example": "danobrien.cs@gmail.com"
    },  
    "phone_number": {
      "type": "string",
      "example": "(322) 222-2222"
    }
  }
},

  "ApiResponse": {
  "type": "object",
  "properties": {
    "code": {
      "type": "integer",
      "format": "int32"
    },
    
    "status": {
      "type": "string"
    },
    "message": {
      "type": "string"
    }
  }
}

    
}
 
}
